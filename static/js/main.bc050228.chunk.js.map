{"version":3,"sources":["constants.tsx","api.ts","components/Todo/Todo.tsx","components/TodoList/TodoList.tsx","App.tsx","index.tsx"],"names":["API_URL","getData","url","a","fetch","response","json","getUsers","getTodos","getPreparedTodos","todos","users","preparedTodos","map","todo","user","find","userId","id","Todo","username","title","completed","TodoList","onTitleBtn","onNameBtn","onCompletedBtn","className","type","value","onClick","item","key","App","useState","isLoaded","setLoad","isLoading","setLoading","setTodos","sort","todoA","todoB","localeCompare","Number","then","newTodos","ReactDOM","render","document","getElementById"],"mappings":"0RAAaA,EAAU,uCCEjBC,EAAO,uCAAG,WAAUC,GAAV,eAAAC,EAAA,sEACSC,MAAMF,GADf,cACRG,EADQ,yBAGPA,EAASC,QAHF,2CAAH,sDAMPC,EAAQ,uCAAG,sBAAAJ,EAAA,+EACRF,EAAO,UAAWD,EAAX,YADC,2CAAH,qDAIRQ,EAAQ,uCAAG,sBAAAL,EAAA,+EACRF,EAAO,UAAWD,EAAX,YADC,2CAAH,qDAIDS,EAAgB,uCAAG,gCAAAN,EAAA,sEACHK,IADG,cACxBE,EADwB,gBAEHH,IAFG,cAExBI,EAFwB,OAIxBC,EAAgBF,EAAMG,KAAI,SAACC,GAAD,sBAC3BA,EAD2B,CAE9BC,KAAMJ,EAAMK,MAAK,SAAAD,GAAI,OAAID,EAAKG,SAAWF,EAAKG,WANlB,kBASvBN,GATuB,2CAAH,qDCVhBO,EAAwB,SAAC,GAAc,IAAZL,EAAW,EAAXA,KAEtC,OACE,4BACE,4BAAKA,EAAKC,KAAKK,UACf,4BAAKN,EAAKO,OACV,4BAAKP,EAAKQ,UAAY,YAAc,iBCF7BC,G,MAA4B,SAAC,GAKnC,IAJLb,EAII,EAJJA,MACAc,EAGI,EAHJA,WACAC,EAEI,EAFJA,UACAC,EACI,EADJA,eAEA,OACE,yBAAKC,UAAU,iBACb,2BAAOA,UAAU,kCACf,2BAAOA,UAAU,cACf,4BACE,4BACE,4BACEA,UAAU,eACVC,KAAK,SACLC,MAAM,OACNC,QAASL,GAJX,SASF,4BACE,4BACEE,UAAU,eACVC,KAAK,SACLC,MAAM,QACNC,QAASN,GAJX,SASF,4BACE,4BACEG,UAAU,eACVC,KAAK,SACLC,MAAM,WACNC,QAASJ,GAJX,aAWN,+BACGhB,EAAMG,KAAI,SAAAkB,GAAI,OAAI,kBAAC,EAAD,CAAMC,IAAKD,EAAKb,GAAIJ,KAAMiB,YCMxCE,EAvDc,WAAO,IAAD,EACLC,oBAAkB,GADb,mBAC1BC,EAD0B,KAChBC,EADgB,OAEDF,oBAAkB,GAFjB,mBAE1BG,EAF0B,KAEfC,EAFe,OAGPJ,mBAA0B,IAHnB,mBAG1BxB,EAH0B,KAGnB6B,EAHmB,KA4BjC,OACE,yBAAKZ,UAAU,OACZQ,EAEG,kBAAC,EAAD,CACEzB,MAAOA,EACPc,WApBU,WAClBe,EAAS,YAAI7B,GAAO8B,MAAK,SAACC,EAAOC,GAAR,OAAkBD,EAAMpB,MAAMsB,cAAcD,EAAMrB,YAoBnEI,UAjBS,WACjBc,EAAS,YAAI7B,GACV8B,MAAK,SAACC,EAAOC,GAAR,OAAkBD,EAAM1B,KAAKK,SAChCuB,cAAcD,EAAM3B,KAAKK,eAetBM,eAZc,WACtBa,EAAS,YAAI7B,GAAO8B,MAAK,SAACC,EAAOC,GAAR,OAAkBE,OAAOF,EAAMpB,WAAasB,OAAOH,EAAMnB,kBAe5E,yBAAKK,UAAU,gBACb,qCACA,4BACEA,UAAU,yBACVC,KAAK,SACLE,QAxCO,WACjBQ,GAAW,GACX7B,IAAmBoC,MAAK,SAAAC,GACtBP,EAASO,GACTV,GAAQ,GACRE,GAAW,QAqCDD,EAAgC,4CAApB,0CChD5BU,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,U","file":"static/js/main.bc050228.chunk.js","sourcesContent":["export const API_URL = 'https://jsonplaceholder.typicode.com';\n","import { API_URL } from './constants';\n\nconst getData = async <T>(url: string): Promise<T> => {\n  const response = await fetch(url);\n\n  return response.json();\n};\n\nconst getUsers = async () => {\n  return getData<Users>(`${API_URL}/users`);\n};\n\nconst getTodos = async () => {\n  return getData<Todos>(`${API_URL}/todos`);\n};\n\nexport const getPreparedTodos = async (): Promise<PreparedTodos[]> => {\n  const todos: Todos = await getTodos();\n  const users: Users = await getUsers();\n\n  const preparedTodos = todos.map((todo) => ({\n    ...todo,\n    user: users.find(user => todo.userId === user.id) as User,\n  }));\n\n  return preparedTodos;\n};\n","import React from 'react';\n\ninterface Props {\n  todo: PreparedTodos;\n}\n\nexport const Todo: React.FC<Props> = ({ todo }) => {\n\n  return (\n    <tr>\n      <td>{todo.user.username}</td>\n      <td>{todo.title}</td>\n      <td>{todo.completed ? 'completed' : 'uncompleted'}</td>\n    </tr>\n  );\n};\n","import React from 'react';\nimport { Todo } from '../Todo/Todo';\nimport './TodoList.css';\n\ninterface Props {\n  todos: PreparedTodos[];\n  onTitleBtn: () => void;\n  onNameBtn: () => void;\n  onCompletedBtn: () => void;\n}\nexport const TodoList: React.FC<Props> = ({\n  todos,\n  onTitleBtn,\n  onNameBtn,\n  onCompletedBtn,\n}) => {\n  return (\n    <div className=\"table-wrapper\">\n      <table className=\"table table-striped w-100 w-50\">\n        <thead className=\"thead-dark\">\n          <tr>\n            <th>\n              <button\n                className=\"btn btn-info\"\n                type=\"button\"\n                value=\"name\"\n                onClick={onNameBtn}\n              >\n                Name\n              </button>\n            </th>\n            <th>\n              <button\n                className=\"btn btn-info\"\n                type=\"button\"\n                value=\"title\"\n                onClick={onTitleBtn}\n              >\n                Todo\n              </button>\n            </th>\n            <th>\n              <button\n                className=\"btn btn-info\"\n                type=\"button\"\n                value=\"complete\"\n                onClick={onCompletedBtn}\n              >\n                Status\n              </button>\n            </th>\n          </tr>\n        </thead>\n        <tbody>\n          {todos.map(item => <Todo key={item.id} todo={item} />)}\n        </tbody>\n      </table>\n    </div>\n  );\n};\n","import React, { useState } from 'react';\nimport './App.css';\nimport { getPreparedTodos } from './api';\nimport { TodoList } from './components/TodoList/TodoList';\n\nexport const App: React.FC = () => {\n  const [isLoaded, setLoad] = useState<boolean>(false);\n  const [isLoading, setLoading] = useState<boolean>(false);\n  const [todos, setTodos] = useState<PreparedTodos[]>([]);\n\n  const handleLoad = () => {\n    setLoading(true);\n    getPreparedTodos().then(newTodos => {\n      setTodos(newTodos);\n      setLoad(true);\n      setLoading(false);\n    });\n  };\n\n  const sortByTitle = () => {\n    setTodos([...todos].sort((todoA, todoB) => todoA.title.localeCompare(todoB.title)));\n  };\n\n  const sortByName = () => {\n    setTodos([...todos]\n      .sort((todoA, todoB) => todoA.user.username\n        .localeCompare(todoB.user.username)));\n  };\n\n  const sortByCompleted = () => {\n    setTodos([...todos].sort((todoA, todoB) => Number(todoB.completed) - Number(todoA.completed)));\n  };\n\n  return (\n    <div className=\"App\">\n      {isLoaded\n        ? (\n          <TodoList\n            todos={todos}\n            onTitleBtn={sortByTitle}\n            onNameBtn={sortByName}\n            onCompletedBtn={sortByCompleted}\n          />\n        )\n        : (\n          <div className=\"primary-show\">\n            <h1>TODOs</h1>\n            <button\n              className=\"btn btn-warning btn-lg\"\n              type=\"button\"\n              onClick={handleLoad}\n            >\n              {!isLoading ? <span>Load</span> : <span>Loading...</span>}\n            </button>\n          </div>\n        )}\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}
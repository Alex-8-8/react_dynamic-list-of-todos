{"version":3,"sources":["constants.tsx","api.ts","components/Todo/Todo.tsx","components/TodoList/TodoList.tsx","App.tsx","index.tsx"],"names":["API_URL","getData","url","a","fetch","response","json","getUsers","getTodos","getPreparedTodos","todos","users","preparedTodos","map","todo","user","find","userId","id","Todo","username","title","completed","TodoList","handleSort","className","type","value","onClick","item","key","App","useState","isLoaded","setLoad","isLoading","setLoading","setTodos","filter","sort","todoA","todoB","Number","localeCompare","then","newTodos","ReactDOM","render","document","getElementById"],"mappings":"0RAAaA,EAAU,uCCEjBC,EAAO,uCAAG,WAAUC,GAAV,eAAAC,EAAA,sEACSC,MAAMF,GADf,cACRG,EADQ,yBAGPA,EAASC,QAHF,2CAAH,sDAMPC,EAAQ,uCAAG,sBAAAJ,EAAA,+EACRF,EAAO,UAAWD,EAAX,YADC,2CAAH,qDAIRQ,EAAQ,uCAAG,sBAAAL,EAAA,+EACRF,EAAO,UAAWD,EAAX,YADC,2CAAH,qDAIDS,EAAgB,uCAAG,gCAAAN,EAAA,sEACHK,IADG,cACxBE,EADwB,gBAEHH,IAFG,cAExBI,EAFwB,OAIxBC,EAAgBF,EAAMG,KAAI,SAACC,GAAD,sBAC3BA,EAD2B,CAE9BC,KAAMJ,EAAMK,MAAK,SAAAD,GAAI,OAAID,EAAKG,SAAWF,EAAKG,WANlB,kBASvBN,GATuB,2CAAH,qDCVhBO,EAAwB,SAAC,GAAD,IAAGL,EAAH,EAAGA,KAAH,OACnC,4BACE,4BAAKA,EAAKC,KAAKK,UACf,4BAAKN,EAAKO,OACV,4BAAKP,EAAKQ,UAAY,YAAc,iBCF3BC,G,MAA4B,SAAC,GAAD,IACvCb,EADuC,EACvCA,MACAc,EAFuC,EAEvCA,WAFuC,OAIvC,yBAAKC,UAAU,iBACb,2BAAOA,UAAU,kCACf,2BAAOA,UAAU,cACf,4BACE,4BACE,4BACEA,UAAU,eACVC,KAAK,SACLC,MAAM,OACNC,QAAS,kBAAMJ,EAAW,UAJ5B,SASF,4BACE,4BACEC,UAAU,eACVC,KAAK,SACLC,MAAM,QACNC,QAAS,kBAAMJ,EAAW,WAJ5B,SASF,4BACE,4BACEC,UAAU,eACVC,KAAK,SACLC,MAAM,WACNC,QAAS,kBAAMJ,EAAW,eAJ5B,aAWN,+BACGd,EAAMG,KAAI,SAAAgB,GAAI,OAAI,kBAAC,EAAD,CAAMC,IAAKD,EAAKX,GAAIJ,KAAMe,YCWtCE,EAvDc,WAAO,IAAD,EACLC,oBAAS,GADJ,mBAC1BC,EAD0B,KAChBC,EADgB,OAEDF,oBAAS,GAFR,mBAE1BG,EAF0B,KAEfC,EAFe,OAGPJ,mBAAwB,IAHjB,mBAG1BtB,EAH0B,KAGnB2B,EAHmB,KA8BjC,OACE,yBAAKZ,UAAU,OACZQ,EAEG,kBAAC,EAAD,CACEvB,MAAOA,EACPc,WAtBS,SAACc,GAClB,OAAQA,GACN,IAAK,YACH,OAAOD,EAAS,YAAI3B,GACjB6B,MAAK,SAACC,EAAOC,GAAR,OAAkBC,OAAOD,EAAMnB,WAAaoB,OAAOF,EAAMlB,eACnE,IAAK,OACH,OAAOe,EAAS,YAAI3B,GACjB6B,MAAK,SAACC,EAAOC,GAAR,OAAkBD,EAAMzB,KAAKK,SAChCuB,cAAcF,EAAM1B,KAAKK,cAChC,IAAK,QACH,OAAOiB,EAAS,YAAI3B,GAAO6B,MAAK,SAACC,EAAOC,GAAR,OAAkBD,EAAMnB,MAAMsB,cAAcF,EAAMpB,WACpF,QACE,OAAOX,MAcL,yBAAKe,UAAU,gBACb,qCACA,4BACEA,UAAU,yBACVC,KAAK,SACLE,QAxCO,WACjBQ,GAAW,GACX3B,IAAmBmC,MAAK,SAAAC,GACtBR,EAASQ,GACTX,GAAQ,GACRE,GAAW,QAqCDD,EAAgC,4CAApB,0CChD5BW,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,U","file":"static/js/main.650c7e73.chunk.js","sourcesContent":["export const API_URL = 'https://jsonplaceholder.typicode.com';\n","import { API_URL } from './constants';\n\nconst getData = async <T>(url: string): Promise<T> => {\n  const response = await fetch(url);\n\n  return response.json();\n};\n\nconst getUsers = async (): Promise<Users> => {\n  return getData<Users>(`${API_URL}/users`);\n};\n\nconst getTodos = async (): Promise<Todos> => {\n  return getData<Todos>(`${API_URL}/todos`);\n};\n\nexport const getPreparedTodos = async (): Promise<PreparedTodos> => {\n  const todos: Todos = await getTodos();\n  const users: Users = await getUsers();\n\n  const preparedTodos = todos.map((todo) => ({\n    ...todo,\n    user: users.find(user => todo.userId === user.id) as User,\n  }));\n\n  return preparedTodos;\n};\n","import React from 'react';\n\ninterface Props {\n  todo: PreparedTodo;\n}\n\nexport const Todo: React.FC<Props> = ({ todo }) => (\n  <tr>\n    <td>{todo.user.username}</td>\n    <td>{todo.title}</td>\n    <td>{todo.completed ? 'completed' : 'uncompleted'}</td>\n  </tr>\n);\n","import React from 'react';\nimport { Todo } from '../Todo/Todo';\nimport './TodoList.css';\n\ninterface Props {\n  todos: PreparedTodos;\n  handleSort: (filter: string) => void;\n}\nexport const TodoList: React.FC<Props> = ({\n  todos,\n  handleSort,\n}) => (\n  <div className=\"table-wrapper\">\n    <table className=\"table table-striped w-100 w-50\">\n      <thead className=\"thead-dark\">\n        <tr>\n          <th>\n            <button\n              className=\"btn btn-info\"\n              type=\"button\"\n              value=\"name\"\n              onClick={() => handleSort('name')}\n            >\n              Name\n            </button>\n          </th>\n          <th>\n            <button\n              className=\"btn btn-info\"\n              type=\"button\"\n              value=\"title\"\n              onClick={() => handleSort('title')}\n            >\n              Todo\n            </button>\n          </th>\n          <th>\n            <button\n              className=\"btn btn-info\"\n              type=\"button\"\n              value=\"complete\"\n              onClick={() => handleSort('completed')}\n            >\n              Status\n            </button>\n          </th>\n        </tr>\n      </thead>\n      <tbody>\n        {todos.map(item => <Todo key={item.id} todo={item} />)}\n      </tbody>\n    </table>\n  </div>\n);\n","import React, { useState } from 'react';\nimport './App.css';\nimport { getPreparedTodos } from './api';\nimport { TodoList } from './components/TodoList/TodoList';\n\nexport const App: React.FC = () => {\n  const [isLoaded, setLoad] = useState(false);\n  const [isLoading, setLoading] = useState(false);\n  const [todos, setTodos] = useState<PreparedTodos>([]);\n\n  const handleLoad = () => {\n    setLoading(true);\n    getPreparedTodos().then(newTodos => {\n      setTodos(newTodos);\n      setLoad(true);\n      setLoading(false);\n    });\n  };\n\n  const handleSort = (filter: string) => {\n    switch (filter) {\n      case 'completed':\n        return setTodos([...todos]\n          .sort((todoA, todoB) => Number(todoB.completed) - Number(todoA.completed)));\n      case 'name':\n        return setTodos([...todos]\n          .sort((todoA, todoB) => todoA.user.username\n            .localeCompare(todoB.user.username)));\n      case 'title':\n        return setTodos([...todos].sort((todoA, todoB) => todoA.title.localeCompare(todoB.title)));\n      default:\n        return todos;\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      {isLoaded\n        ? (\n          <TodoList\n            todos={todos}\n            handleSort={handleSort}\n          />\n        )\n        : (\n          <div className=\"primary-show\">\n            <h1>TODOs</h1>\n            <button\n              className=\"btn btn-warning btn-lg\"\n              type=\"button\"\n              onClick={handleLoad}\n            >\n              {!isLoading ? <span>Load</span> : <span>Loading...</span>}\n            </button>\n          </div>\n        )}\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}